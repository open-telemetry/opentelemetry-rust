[package]
name = "opentelemetry"
version = "0.28.0"
description = "OpenTelemetry API for Rust"
homepage = "https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry"
repository = "https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry"
readme = "README.md"
categories = [
    "development-tools::debugging",
    "development-tools::profiling",
    "api-bindings",
    "asynchronous",
]
keywords = ["opentelemetry", "logging", "tracing", "metrics"]
license = "Apache-2.0"
edition = "2021"
rust-version = "1.75.0"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
futures-core = { workspace = true, optional = true }
futures-sink = { version = "0.3", optional = true }
pin-project-lite = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true}
tracing = {workspace = true, optional = true} # optional for opentelemetry internal logging

[target.'cfg(all(target_arch = "wasm32", not(target_os = "wasi")))'.dependencies]
js-sys = "0.3.63"

[features]
default = ["trace", "metrics", "logs", "internal-logs"]
trace = ["pin-project-lite", "futures-sink", "futures-core", "thiserror"]
metrics = []
testing = ["trace"]
logs = []
spec_unstable_logs_enabled = ["logs"]
internal-logs = ["tracing"]

[dev-dependencies]
opentelemetry_sdk = { path = "../opentelemetry-sdk", features = ["spec_unstable_logs_enabled"]} # for documentation tests
criterion = { workspace = true }
rand = { workspace = true, features = ["os_rng", "thread_rng"] }

[[bench]]
name = "metrics"
harness = false
required-features = ["metrics"]

[[bench]]
name = "attributes"
harness = false

[[bench]]
name = "anyvalue"
harness = false

[lib]
bench = false

[lints]
workspace = true
